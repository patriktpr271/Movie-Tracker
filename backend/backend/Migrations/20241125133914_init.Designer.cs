// <auto-generated />
using System;
using Client_Homework.Server.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241125133914_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Client_Homework.Server.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReviewsCount")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WatchedMoviesCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("Client_Homework.Server.Models.ReviewList", b =>
                {
                    b.Property<Guid>("ReviewListOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("ReviewListOwnerId", "MovieId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ReviewLists");
                });

            modelBuilder.Entity("Client_Homework.Server.Models.WatchList", b =>
                {
                    b.Property<Guid>("WatchListOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ApplicationUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsWatched")
                        .HasColumnType("bit");

                    b.HasKey("WatchListOwnerId", "MovieId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("WatchLists");
                });

            modelBuilder.Entity("Client_Homework.Server.Models.ReviewList", b =>
                {
                    b.HasOne("Client_Homework.Server.Models.ApplicationUser", null)
                        .WithMany("ReviewList")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("Client_Homework.Server.Models.WatchList", b =>
                {
                    b.HasOne("Client_Homework.Server.Models.ApplicationUser", null)
                        .WithMany("WatchList")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("Client_Homework.Server.Models.ApplicationUser", b =>
                {
                    b.Navigation("ReviewList");

                    b.Navigation("WatchList");
                });
#pragma warning restore 612, 618
        }
    }
}
